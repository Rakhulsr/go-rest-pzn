// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/Rakhulsr/go-rest-api-pzn/app"
	"github.com/Rakhulsr/go-rest-api-pzn/controller"
	"github.com/Rakhulsr/go-rest-api-pzn/middleware"
	"github.com/Rakhulsr/go-rest-api-pzn/repositories"
	"github.com/Rakhulsr/go-rest-api-pzn/service"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
	"net/http"
)

// Injectors from injector.go:

func InitServer() *http.Server {
	db := app.NewDb()
	categoryRepositoryImpl := repositories.NewCategoryRepository(db)
	validate := provideValidator()
	categoryServiceImpl := service.NewCategoryService(categoryRepositoryImpl, db, validate)
	categoryControllerImpl := controller.NewCategoryController(categoryServiceImpl)
	router := app.NewRouter(categoryControllerImpl)
	authMiddleware := middleware.NewMiddleware(router)
	server := NewServer(authMiddleware)
	return server
}

// injector.go:

var categorySet = wire.NewSet(repositories.NewCategoryRepository, wire.Bind(new(repositories.CategoryRepository), new(*repositories.CategoryRepositoryImpl)), service.NewCategoryService, wire.Bind(new(service.CategoryService), new(*service.CategoryServiceImpl)), controller.NewCategoryController, wire.Bind(new(controller.CategoryController), new(*controller.CategoryControllerImpl)))

func provideValidator() *validator.Validate {

	return validator.New()
}
